{"version":3,"file":"rico.esm.min.js","sources":["../src/rico/config/block_attributes.js","../src/rico/config/browser.js","../src/rico/config/input.js","../src/rico/config/key_names.js","../src/rico/config/lang.js","../src/rico/config/parser.js","../src/rico/config/text_attributes.js","../src/rico/config/toolbar.js","../src/rico/config/undo.js","../src/rico/core/basic_object.js","../src/rico/core/utilities/utf16_string.js","../src/rico/core/object.js","../src/rico/core/helpers/arrays.js","../src/rico/core/helpers/extend.js","../src/rico/core/helpers/dom.js","../src/rico/constants.js","../src/rico/core/helpers/bidi.js","../src/rico/core/helpers/config.js","../src/rico/core/helpers/events.js","../src/rico/core/helpers/functions.js","../src/rico/core/helpers/objects.js","../src/rico/core/helpers/ranges.js","../src/rico/observers/selection_change_observer.js","../src/rico/core/helpers/strings.js","../src/rico/core/collections/hash.js","../src/rico/core/collections/object_group.js","../src/rico/core/collections/object_map.js","../src/rico/core/collections/element_store.js","../src/rico/core/utilities/operation.js","../src/rico/views/object_view.js","../src/rico/views/piece_view.js","../src/rico/views/text_view.js","../src/rico/views/block_view.js","../src/rico/views/document_view.js","../src/rico/models/piece.js","../src/rico/models/string_piece.js","../src/rico/models/splittable_list.js","../src/rico/models/text.js","../src/rico/models/block.js","../src/rico/models/document.js","../src/rico/models/html_sanitizer.js","../src/rico/models/html_parser.js","../src/rico/core/serialization.js","../src/rico/models/line_break_insertion.js","../src/rico/models/composition.js","../src/rico/models/undo_manager.js","../src/rico/models/editor.js","../src/rico/models/location_mapper.js","../src/rico/models/point_mapper.js","../src/rico/models/selection_manager.js","../src/rico/controllers/composition_controller.js","../src/rico/controllers/controller.js","../src/rico/observers/mutation_observer.js","../src/rico/models/flaky_android_keyboard_detector.js","../src/rico/controllers/input_controller.js","../src/rico/controllers/level_2_input_controller.js","../src/rico/controllers/toolbar_controller.js","../src/rico/controllers/editor_controller.js","../src/rico/elements/rico_toolbar_element.js","../src/rico/elements/rico_editor_element.js","../src/rico/rico.js"],"sourcesContent":["const attributes = {\n  default: {\n    tagName: \"p\",\n    breakOnReturn: true,\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  heading2: {\n    tagName: \"h2\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n","const androidVersionMatch = navigator.userAgent.match(/android\\s([0-9]+.*Chrome)/i)\nconst androidVersion = androidVersionMatch && parseInt(androidVersionMatch[1])\n\nexport default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n\n  // Android 13, especially on Samsung keyboards, emits extra compositionend and beforeinput events\n  // that can make the input handler lose the the current selection or enter an infinite input -> render -> input\n  // loop.\n  recentAndroid: androidVersion && androidVersion > 12,\n  samsungAndroid: androidVersion && navigator.userAgent.match(/Android.*SM-/),\n\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: typeof InputEvent !== \"undefined\" &&\n    [ \"data\", \"getTargetRanges\", \"inputType\" ].every(prop => prop in InputEvent.prototype),\n}\n","import browser from \"rico/config/browser\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  }\n}\n\nexport default input\n","export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n","export default {\n  bold: \"Bold\",\n  bullets: \"Bulleted list\",\n  code: \"Preformatted text\",\n  heading1: \"Heading T1\",\n  heading2: \"Heading T2\",\n  heading3: \"Heading T3\",\n  indent: \"Indent\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbered list\",\n  outdent: \"Outdent\",\n  quote: \"Quoted text\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  small: \"Small\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URLâ€¦\",\n}\n","export default {\n  removeBlankTableCells: false,\n  tableCellSeparator: \" | \",\n  tableRowSeparator: \"\\n\",\n}\n","export default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  small: {\n    tagName: \"small\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"small\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = \"a\"\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n","import lang from \"rico/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"rico-button-row\">\n      <span class=\"rico-button-group rico-button-group-text-tools\" data-rico-button-group=\"text-tools\">\n        <button type=\"button\" class=\"rico-button rico-button-bold\" data-rico-attribute=\"bold\" data-rico-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"rico-button rico-button-italic\" data-rico-attribute=\"italic\" data-rico-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"rico-button rico-button-small\" data-rico-attribute=\"small\" data-rico-key=\"shift+b\" title=\"${lang.small}\" tabindex=\"-1\">${lang.small}</button>\n        <button type=\"button\" class=\"rico-button rico-button-strike\" data-rico-attribute=\"strike\" data-rico-key=\"shift+i\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"rico-button rico-button-link\" data-rico-attribute=\"href\" data-rico-action=\"link\" data-rico-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"rico-button-group rico-button-group-block-tools\" data-rico-button-group=\"block-tools\">\n        <button type=\"button\" class=\"rico-button rico-button-heading1\" data-rico-attribute=\"heading1\" data-rico-key=\"g\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"rico-button rico-button-heading2\" data-rico-attribute=\"heading2\" data-rico-key=\"shift+g\" title=\"${lang.heading2}\" tabindex=\"-1\">${lang.heading2}</button>\n        \n        <button type=\"button\" class=\"rico-button rico-button-quote\" data-rico-attribute=\"quote\" data-rico-key=\"e\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"rico-button rico-button-code\" data-rico-attribute=\"code\" data-rico-key=\"shift+e\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        \n        <button type=\"button\" class=\"rico-button rico-button-bullets\" data-rico-attribute=\"bullet\" data-rico-key=\".\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"rico-button rico-button-numbers\" data-rico-attribute=\"number\" data-rico-key=\"shift+.\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        \n        <button type=\"button\" class=\"rico-button rico-button-unindent\" data-rico-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"rico-button rico-button-indent\" data-rico-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"rico-button-group rico-button-group-history-tools\" data-rico-button-group=\"history-tools\">\n        <button type=\"button\" class=\"rico-button rico-button-undo\" data-rico-action=\"undo\" data-rico-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"rico-button rico-button-redo\" data-rico-action=\"redo\" data-rico-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"rico-dialogs\" data-rico-dialogs>\n      <div class=\"rico-dialog rico-dialog-link\" data-rico-dialog=\"href\" data-rico-dialog-attribute=\"href\">\n        <div class=\"rico-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"rico-input rico-input-dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-rico-input>\n          <div class=\"rico-button-group\">\n            <input type=\"button\" class=\"rico-button rico-button-dialog\" value=\"${lang.link}\" data-rico-method=\"setAttribute\">\n            <input type=\"button\" class=\"rico-button rico-button-dialog\" value=\"${lang.unlink}\" data-rico-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n","const undo = { interval: 5000 }\nexport default undo\n","export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n","import BasicObject from \"rico/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n","import BasicObject from \"rico/core/basic_object\"\nimport UTF16String from \"rico/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class RicoObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n","export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n","import blockAttributes from \"rico/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"rico/constants\"\nimport { extend } from \"./extend\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.ricoCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n","export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n","import { makeElement } from \"rico/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const textArea = makeElement(\"textarea\", { dir: \"auto\", name: \"y\", dirName: \"y.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n  form.appendChild(textArea)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(textArea.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      textArea.value = string\n      return new FormData(form).get(textArea.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n","import * as config from \"rico/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n","const testTransferData = { \"application/x-rico-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n","export const defer = (fn) => setTimeout(fn, 1)\n","/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n","import { copyObject, objectsAreEqual } from \"rico/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport BasicObject from \"rico/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.run = this.run.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      if (\"onselectionchange\" in document) {\n        return document.addEventListener(\"selectionchange\", this.update, true)\n      } else {\n        return this.run()\n      }\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((s) => s !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    const domRange = getDOMRange()\n    if (!domRangesAreEqual(domRange, this.domRange)) {\n      this.domRange = domRange\n      return this.notifySelectionManagersOfSelectionChange()\n    }\n  }\n\n  reset() {\n    this.domRange = null\n    return this.update()\n  }\n\n  // Private\n\n  run() {\n    if (this.started) {\n      this.update()\n      return requestAnimationFrame(this.run)\n    }\n  }\n}\n\nconst domRangesAreEqual = (left, right) =>\n  left?.startContainer === right?.startContainer &&\n  left?.startOffset === right?.startOffset &&\n  left?.endContainer === right?.endContainer &&\n  left?.endOffset === right?.endOffset\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n","/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"rico/constants\"\nimport UTF16String from \"rico/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n","import RicoObject from \"rico/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"rico/core/helpers\"\n\nexport default class Hash extends RicoObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n","export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n","import BasicObject from \"rico/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n","export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.ricoStoreKey\n","import BasicObject from \"rico/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n","import BasicObject from \"rico/core/basic_object\"\nimport ObjectGroup from \"rico/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-rico-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n","/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"rico/constants\"\n\nimport ObjectView from \"rico/views/object_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"rico/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    this.string = this.piece.toString()\n  }\n\n  createNodes() {\n    let nodes = this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n","/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"rico/views/object_view\"\nimport ObjectGroup from \"rico/core/collections/object_group\"\nimport PieceView from \"rico/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n","import * as config from \"rico/config\"\nimport ObjectView from \"rico/views/object_view\"\nimport TextView from \"rico/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"rico/core/helpers\"\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    let attributes, className\n    const attributeName = this.attributes[depth]\n\n    const { tagName } = getBlockConfig(attributeName)\n    if (depth === 0 && this.block.isRTL()) {\n      attributes = { dir: \"rtl\" }\n    }\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n","import { makeElement } from \"rico/core/helpers\"\n\nimport ElementStore from \"rico/core/collections/element_store\"\nimport ObjectGroup from \"rico/core/collections/object_group\"\nimport ObjectView from \"rico/views/object_view\"\nimport BlockView from \"rico/views/block_view\"\n\nimport { defer } from \"rico/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-rico-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n","import RicoObject from \"rico/core/object\" // Don't override window.Object\nimport Hash from \"rico/core/collections/hash\"\n\nexport default class Piece extends RicoObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n","import Piece from \"rico/models/piece\"\n\nimport { normalizeNewlines } from \"rico/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"â€¦\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n","/* eslint-disable\n    prefer-const,\n*/\nimport RicoObject from \"rico/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"rico/core/helpers\"\n\nexport default class SplittableList extends RicoObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n","import RicoObject from \"rico/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"rico/core/helpers\"\n\nimport Piece from \"rico/models/piece\"\nimport StringPiece from \"rico/models/string_piece\"\nimport SplittableList from \"rico/models/splittable_list\"\n\nimport Hash from \"rico/core/collections/hash\"\n\nexport default class Text extends RicoObject {\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n","import RicoObject from \"rico/core/object\" // Don't override window.Object\nimport Text from \"rico/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  spliceArray,\n} from \"rico/core/helpers\"\n\nexport default class Block extends RicoObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes)\n  }\n\n  constructor(text, attributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    const attr = this.getLastAttribute()\n    const config = getBlockConfig(attr ? attr : \"default\")\n    return config ? config.breakOnReturn : false\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n","import * as config from \"rico/config\"\nimport RicoObject from \"rico/core/object\" // Don't override window.Object\n\nimport Text from \"rico/models/text\"\nimport Block from \"rico/models/block\"\nimport SplittableList from \"rico/models/splittable_list\"\nimport Hash from \"rico/core/collections/hash\"\nimport ObjectMap from \"rico/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"rico/core/helpers\"\n\nexport default class Document extends RicoObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray().map((block) => JSON.parse(block.text.toConsole())))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n","import BasicObject from \"rico/core/basic_object\"\n\nimport { removeNode, tagName, walkTree } from \"rico/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe form\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-rico\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-rico-serialize\") === \"false\"\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n","/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"rico/config\"\nimport BasicObject from \"rico/core/basic_object\"\nimport Document from \"rico/models/document\"\nimport HTMLSanitizer from \"rico/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"rico/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}) => {\n  const text = []\n  return { text, attributes }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      const html = HTMLSanitizer.sanitize(this.html).getHTML()\n      this.containerElement.innerHTML = html\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-rico-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    switch (tagName(element)) {\n      case \"br\":\n        if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n          this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n        }\n        return this.processedElements.push(element)\n      case \"img\":\n        attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n        const object = getImageDimensions(element)\n        for (const key in object) {\n          const value = object[key]\n          attributes[key] = value\n        }\n        return this.processedElements.push(element)\n      case \"tr\":\n        if (this.needsTableSeparator(element)) {\n          return this.appendStringWithAttributes(config.parser.tableRowSeparator)\n        }\n        break\n      case \"td\":\n        if (this.needsTableSeparator(element)) {\n          return this.appendStringWithAttributes(config.parser.tableCellSeparator)\n        }\n        break\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  needsTableSeparator(element) {\n    if (config.parser.removeBlankTableCells) {\n      const content = element.previousSibling?.textContent\n      return content && /\\S/.test(content)\n    } else {\n      return element.previousSibling\n    }\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n//Â Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n","/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"rico/core/helpers\"\n\nimport DocumentView from \"rico/views/document_view\"\nimport Document from \"rico/models/document\"\nimport HTMLParser from \"rico/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-rico-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-rico-id\",\n  \"data-rico-store-key\",\n  \"data-rico-mutable\",\n  \"data-rico-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-rico-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n","export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return !this.shouldBreakFormattedBlock() ? this.breaksOnReturn : false\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n","import BasicObject from \"rico/core/basic_object\"\nimport Text from \"rico/models/text\"\nimport Block from \"rico/models/block\"\nimport Document from \"rico/models/document\"\nimport HTMLParser from \"rico/models/html_parser\"\nimport LineBreakInsertion from \"rico/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n} from \"rico/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n    }\n\n    this.setDocument(this.document.removeTextAtRange(range))\n    this.setSelection(range[0])\n    if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n      return false\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  moveCursorInDirection(direction) {\n    const range = this.getExpandedRangeInDirection(direction)\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionIsInCursorTarget() {\n    return this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n","import BasicObject from \"rico/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n","import Document from \"rico/models/document\"\nimport HTMLParser from \"rico/models/html_parser\"\n\nimport UndoManager from \"rico/models/undo_manager\"\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n","/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"rico/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n\n    const walker = walkTree(this.element)\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\") {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return NodeFilter.FILTER_ACCEPT\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n","/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"rico/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n","/* eslint-disable\n*/\nimport BasicObject from \"rico/core/basic_object\"\n\nimport LocationMapper from \"rico/models/location_mapper\"\nimport PointMapper from \"rico/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"rico/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n","import BasicObject from \"rico/core/basic_object\"\nimport DocumentView from \"rico/views/document_view\"\n\nimport { defer, handleEvent, innerElementIsActive } from \"rico/core/helpers\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  getSerializableElement() {\n    return this.element\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return true\n  }\n\n}\n","import \"rico/views/object_view\"\nimport BasicObject from \"rico/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n","import BasicObject from \"rico/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"rico/core/helpers\"\n\nconst mutableAttributeName = \"data-rico-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n","import * as config from \"rico/config\"\nimport { NON_BREAKING_SPACE, OBJECT_REPLACEMENT_CHARACTER, ZERO_WIDTH_SPACE } from \"rico/constants\"\n\n// Each software keyboard on Android emmits its own set of events and some of them can be buggy.\n// This class detects when some buggy events are being emmitted and lets know the input controller\n// that they should be ignored.\nexport default class FlakyAndroidKeyboardDetector {\n  constructor(element) {\n    this.element = element\n  }\n\n  shouldIgnore(event) {\n    if (!config.browser.samsungAndroid) return false\n\n    this.previousEvent = this.event\n    this.event = event\n\n    this.checkSamsungKeyboardBuggyModeStart()\n    this.checkSamsungKeyboardBuggyModeEnd()\n\n    return this.buggyMode\n  }\n\n  // private\n\n  // The Samsung keyboard on Android can enter a buggy state in which it emmits a flurry of confused events that,\n  // if processed, corrupts the editor. The buggy mode always starts with an insertText event, right after a\n  // keydown event with for an \"Unidentified\" key, with the same text as the editor element, except for a few\n  // extra whitespace, or exotic utf8, characters.\n  checkSamsungKeyboardBuggyModeStart() {\n    if (this.insertingLongTextAfterUnidentifiedChar() && differsInWhitespace(this.element.innerText, this.event.data)) {\n      this.buggyMode = true\n      this.event.preventDefault()\n    }\n  }\n\n  // The flurry of buggy events are always insertText. If we see any other type, it means it's over.\n  checkSamsungKeyboardBuggyModeEnd() {\n    if (this.buggyMode && this.event.inputType !== \"insertText\") {\n      this.buggyMode = false\n    }\n  }\n\n  insertingLongTextAfterUnidentifiedChar() {\n    return this.isBeforeInputInsertText() && this.previousEventWasUnidentifiedKeydown() && this.event.data?.length > 50\n  }\n\n  isBeforeInputInsertText() {\n    return this.event.type === \"beforeinput\" && this.event.inputType === \"insertText\"\n  }\n\n  previousEventWasUnidentifiedKeydown() {\n    return this.previousEvent?.type === \"keydown\" && this.previousEvent?.key === \"Unidentified\"\n  }\n}\n\nconst differsInWhitespace = (text1, text2) => {\n  return normalize(text1) === normalize(text2)\n}\n\nconst whiteSpaceNormalizerRegexp = new RegExp(`(${OBJECT_REPLACEMENT_CHARACTER}|${ZERO_WIDTH_SPACE}|${NON_BREAKING_SPACE}|\\\\s)+`, \"g\")\nconst normalize = (text) => text.replace(whiteSpaceNormalizerRegexp, \" \").trim()\n","import BasicObject from \"rico/core/basic_object\"\nimport MutationObserver from \"rico/observers/mutation_observer\"\nimport FlakyAndroidKeyboardDetector from \"../models/flaky_android_keyboard_detector\"\n\nimport { handleEvent, innerElementIsActive } from \"rico/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    this.flakyKeyboardDetector = new FlakyAndroidKeyboardDetector(this.element)\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            if (this.flakyKeyboardDetector.shouldIgnore(event)) return\n\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n","import { getAllAttributeNames, squishBreakableWhitespace } from \"rico/core/helpers\"\nimport InputController from \"rico/controllers/input_controller\"\nimport * as config from \"rico/config\"\n\nimport { dataTransferIsPlainText, keyEventIsKeyboardCommand } from \"rico/core/helpers\"\n\nimport { selectionChangeObserver } from \"rico/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n\n      if (handler) {\n        this.withEvent(event, handler)\n        this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      selectionChangeObserver.reset()\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        if (!config.browser.recentAndroid) this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Enter+Shift\"() {\n      this.event.preventDefault()\n      this.insertString(\"\\n\")\n      this.scheduleRender()\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      return this.insertString(this.event.dataTransfer.getData(\"text/plain\"), { updatePosition: false })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n","import BasicObject from \"rico/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"rico/core/helpers\"\n\nconst attributeButtonSelector = \"[data-rico-attribute]\"\nconst actionButtonSelector = \"[data-rico-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-rico-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-rico-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-rico-method]`\nconst dialogInputSelector = `${dialogSelector} [data-rico-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-rico-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-rico-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-rico-attribute\") || element.getAttribute(\"data-rico-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-rico-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-rico-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-rico-active\", \"\")\n        return element.classList.add(\"rico-active\")\n      } else {\n        element.removeAttribute(\"data-rico-active\")\n        return element.classList.remove(\"rico-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-rico-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-rico-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-rico-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-rico-active\", \"\")\n    element.classList.add(\"rico-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-rico-validate\", \"\")\n      input.classList.add(\"rico-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-rico-active\")\n      element.classList.remove(\"rico-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-rico-validate\")\n      input.classList.remove(\"rico-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-rico-dialog=${dialogName}]`)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport * as config from \"rico/config\"\n\nimport { serializeToContentType } from \"rico/core/serialization\"\n\nimport Controller from \"rico/controllers/controller\"\nimport Level2InputController from \"rico/controllers/level_2_input_controller\"\nimport CompositionController from \"rico/controllers/composition_controller\"\nimport ToolbarController from \"rico/controllers/toolbar_controller\"\nimport Composition from \"rico/models/composition\"\nimport Editor from \"rico/models/editor\"\nimport SelectionManager from \"rico/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"rico/core/helpers\"\nimport { selectionChangeObserver } from \"rico/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.inputController = new Level2InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName) {\n    return this.invokeAction(actionName)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n","import * as config from \"rico/config\"\n\n\nexport default class RicoToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n","import * as config from \"rico/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  makeElement,\n  triggerEvent,\n} from \"rico/core/helpers\"\n\nimport EditorController from \"rico/controllers/editor_controller\"\nimport \"rico/elements/rico_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nexport default class RicoEditorElement extends HTMLElement {\n\n  // Properties\n\n  get ricoId() {\n    if (this.hasAttribute(\"rico-id\")) {\n      return this.getAttribute(\"rico-id\")\n    } else {\n      this.setAttribute(\"rico-id\", ++id)\n      return this.ricoId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `rico-toolbar-${this.ricoId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"rico-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `rico-input-${this.ricoId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`rico-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-rico-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"rico-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"rico-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) return\n    if (event.target !== this.form) return\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n","import { version } from \"../../package.json\"\n\nimport * as config from \"rico/config\"\nimport * as core from \"rico/core\"\nimport * as models from \"rico/models\"\nimport * as views from \"rico/views\"\nimport * as controllers from \"rico/controllers\"\nimport * as observers from \"rico/observers\"\nimport * as elements from \"rico/elements\"\n\nconst Rico = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  elements\n}\n\n// Expose models under the Rico constant for compatibility with v1\nObject.assign(Rico, models)\n\nfunction start() {\n  if (!customElements.get(\"rico-toolbar\")) {\n    customElements.define(\"rico-toolbar\", elements.RicoToolbarElement)\n  }\n\n  if (!customElements.get(\"rico-editor\")) {\n    customElements.define(\"rico-editor\", elements.RicoEditorElement)\n  }\n}\n\nwindow.Rico = Rico\nsetTimeout(start, 0)\n\nexport default Rico\n"],"names":["attributes","default","tagName","breakOnReturn","parse","quote","heading1","terminal","group","heading2","code","text","plaintext","bulletList","bullet","listAttribute","nestable","test","element","parentNode","this","numberList","number","_element$tagName","toLowerCase","androidVersionMatch","navigator","userAgent","match","androidVersion","parseInt","browser","composesExistingText","recentAndroid","samsungAndroid","forcesObjectResizing","supportsInputEvents","InputEvent","every","prop","prototype","input","level2Enabled","getLevel","lang","bold","bullets","heading3","indent","italic","link","numbers","outdent","redo","remove","small","strike","undo","unlink","url","urlPlaceholder","parser","removeBlankTableCells","tableCellSeparator","tableRowSeparator","text_attributes","inheritable","style","window","getComputedStyle","fontWeight","fontStyle","href","groupTagName","matchingSelector","closest","getAttribute","frozen","backgroundColor","toolbar","getDefaultHTML","concat","interval","BasicObject","proxyMethod","expression","name","toMethod","toProperty","optional","parseProxyMethodExpression","subject","object","_this$toMethod","_object","call","apply","arguments","proxyMethodExpressionPattern","Error","args","Function","RegExp","UTF16String","static","value","fromUCS2String","toString","ucs2String","ucs2decode","fromCodepoints","codepoints","ucs2encode","constructor","super","length","ucs2Length","offsetToUCS2Offset","offset","slice","Math","max","offsetFromUCS2Offset","ucs2Offset","charAt","isEqualTo","box","toJSON","getCacheKey","hasArrayFrom","Array","from","_Array$from","hasStringCodePointAt","_$codePointAt","codePointAt","hasStringFromCodePoint","String","_String$fromCodePoint","fromCodePoint","string","map","char","output","counter","charCodeAt","extra","push","array","result","forEach","fromCharCode","join","id","RicoObject","fromJSONString","jsonString","fromJSON","JSON","hasSameConstructorAs","inspect","parts","contents","contentsForInspection","key","toJSONString","stringify","toUTF16String","arraysAreEqual","a","b","index","spliceArray","_len","_key","splice","extend","properties","html","document","documentElement","matches","handleEvent","eventName","onElement","withCallback","inPhase","preventDefault","times","selector","useCapture","handler","event","destroy","target","findClosestElementFromNode","removeEventListener","addEventListener","triggerEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","elementMatchesSelector","nodeType","node","untilNode","Node","ELEMENT_NODE","innerElementIsActive","activeElement","elementContainsNode","findChildIndexOfNode","_node","childIndex","previousSibling","removeNode","_node$parentNode","removeChild","walkTree","tree","onlyNodesOfType","usingFilter","expandEntityReferences","whatToShow","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","SHOW_ALL","createTreeWalker","makeElement","tag","options","createElement","editable","contenteditable","setAttribute","data","dataset","className","split","classList","add","textContent","childNodes","childNode","appendChild","blockTagNames","getBlockTagNames","blockAttributes","nodeIsBlockContainer","nodeIsBlockStartComment","firstChild","nodeProbablyIsBlockContainer","includes","nodeIsBlockStart","strict","undefined","nodeIsCommentNode","COMMENT_NODE","nodeIsCursorTarget","nodeIsTextNode","ricoCursorTarget","nodeIsEmptyTextNode","TEXT_NODE","RTL_PATTERN","getDirection","dir","dirName","textArea","form","supportsDirName","FormData","has","error","supportsDirSelector","get","trim","allAttributeNames","blockAttributeNames","textAttributeNames","listAttributeNames","getAllAttributeNames","getTextAttributeNames","getBlockAttributeNames","getBlockConfig","attributeName","config","Object","keys","getTextConfig","keyEventIsKeyboardCommand","platform","metaKey","ctrlKey","defer","fn","setTimeout","objectsAreEqual","normalizeRange","range","isArray","copyValue","rangeIsCollapsed","start","end","rangeValuesAreEqual","rangesAreEqual","leftRange","rightRange","leftStart","leftEnd","rightStart","rightEnd","copyObject","left","right","SelectionChangeObserver","update","bind","run","selectionManagers","started","stop","registerSelectionManager","selectionManager","unregisterSelectionManager","filter","s","notifySelectionManagersOfSelectionChange","selectionDidChange","domRange","getDOMRange","domRangesAreEqual","reset","requestAnimationFrame","startContainer","startOffset","endContainer","endOffset","selectionChangeObserver","getDOMSelection","selection","getSelection","rangeCount","_getDOMSelection","getRangeAt","domRangeIsPrivate","setDOMRange","removeAllRanges","addRange","nodeIsPrivate","getPrototypeOf","normalizeSpaces","replace","NON_BREAKING_SPACE","breakableWhitespacePattern","squishBreakableWhitespace","source","utf16StringDifferences","diffA","utf16StringDifference","utf16String","diffB","leftIndex","rightIndexA","rightIndexB","Hash","objects","hash","getKeys","getKeysCommonToHash","values","copy","merge","unbox","toArray","isEmpty","toObject","keyToRemove","sort","ObjectGroup","ungroupedObjects","depth","asTree","_object$canBeGrouped2","_object$canBeGrouped","_group$canBeGroupedWi","_group","canBeGrouped","canBeGroupedWith","groupObjects","getObjects","getDepth","ObjectMap","find","ElementStore","elements","getKey","ricoStoreKey","Operation","isPerforming","performing","hasPerformed","performed","hasSucceeded","succeeded","hasFailed","getPromise","promise","Promise","resolve","reject","perform","callback","release","_this$promise","_this$promise$cancel","cancel","ObjectView","childViews","rootView","getNodes","nodes","createNodes","cloneNode","invalidate","_this$parentView","parentView","invalidateViewForObject","_this$findViewForObje","findViewForObject","findOrCreateCachedChildView","viewClass","view","getCachedViewForObject","recordChildView","createChildView","cacheViewForObject","ObjectGroupView","getAllChildViews","views","childView","findElement","findElementForObject","querySelector","getViewCache","isViewCachingEnabled","viewCache","shouldCacheViews","enableViewCaching","disableViewCaching","_this$getViewCache","cache","garbageCollectCachedViews","objectKeys","objectGroup","getChildViews","createContainerElement","PieceView","piece","getAttributes","textConfig","context","createStringNodes","innerElement","_element","firstElementChild","findInnerElement","_this$textConfig","createTextNode","iterable","substring","preserveSpaces","styles","pendingElement","styleProperty","isLast","isFirst","followsWhitespace","TextView","pieces","getPieces","lastIndex","endsWithWhitespace","previousPiece","hasAttribute","BlockView","block","createComment","_getBlockConfig","getLastAttribute","textView","shouldAddExtraNewlineElement","isRTL","DocumentView","render","sync","elementStore","setDocument","shadowElement","getBlocks","isSynced","elementsHaveEqualHTML","fragment","createDocumentFragmentForSync","lastChild","didSync","findStoredElements","createDocumentFragment","storedElement","replaceChild","querySelectorAll","otherElement","ignoreSpaces","innerHTML","Piece","type","types","pieceJSON","copyWithAttributes","getValue","copyWithAdditionalAttributes","copyWithoutAttribute","attribute","getAttributesHash","hasSameStringValueAsPiece","hasSameAttributesAsPiece","isBlockBreak","isSerializable","getLength","canBeConsolidatedWith","StringPiece","normalizeNewlines","consolidateWith","splitAtOffset","toConsole","registerType","SplittableList","indexOf","eachObject","insertObjectAtIndex","insertSplittableListAtIndex","splittableList","insertSplittableListAtPosition","position","splitObjectAtPosition","editObjectAtIndex","replaceObjectAtIndex","removeObjectAtIndex","getObjectAtIndex","getSplittableListInRange","rightIndex","splitObjectsAtRange","selectSplittableList","removeObjectsInRange","transformObjectsInRange","transform","transformedObjects","rightOuterIndex","leftInnerIndex","startOfRange","endOfRange","getObjectAtPosition","findIndexAndOffsetAtPosition","splitIndex","splitOffset","leftObject","rightObject","consolidate","pendingObject","_pendingObject$canBeC","_pendingObject","consolidateFromIndexToIndex","startIndex","endIndex","objectsInRange","consolidatedInRange","currentPosition","nextPosition","findPositionAtIndexAndOffset","currentIndex","getEndPosition","endPosition","objectArraysAreEqual","Text","textJSON","notEmpty","pieceList","copyWithPieceList","copyUsingObjectMap","objectMap","appendText","insertTextAtPosition","removeTextAtRange","replaceTextAtRange","moveTextFromRangeToPosition","getTextAtRange","addAttributeAtRange","addAttributesAtRange","removeAttributeAtRange","setAttributesAtRange","getAttributesAtPosition","_this$pieceList$getOb","getCommonAttributes","fromCommonAttributesOfObjects","getCommonAttributesAtRange","getExpandedRangeForAttributeAtOffset","getStringAtRange","getStringAtPosition","startsWithString","endsWithString","_text$pieceList","eachPiece","getPieceAtPosition","toSerializableText","Block","blockJSON","applyBlockBreakToText","copyWithText","copyWithoutText","copyWithoutAttributes","mappedText","addAttribute","expandAttribute","removeAttribute","removeLastValue","removeLastAttribute","getLastElement","getAttributeLevel","getAttributeAtLevel","level","hasAttributes","getLastNestableAttribute","getNestableAttributes","getNestingLevel","decreaseNestingLevel","increaseNestingLevel","lastIndexOf","getListItemAttributes","isListItem","isTerminalBlock","_getBlockConfig2","breaksOnReturn","attr","findLineBreakInDirectionFromPosition","direction","newlineText","textForStringWithAttributes","getTextWithoutBlockBreak","getBlockBreakPosition","textEndsInBlockBreak","otherBlock","otherAttributes","otherAttribute","getListAttributeNames","unmarkExistingInnerBlockBreaksInText","addBlockBreakToText","modified","innerPieces","lastPiece","unmarkBlockBreakPiece","blockBreakText","blockBreak","endText","Document","documentJSON","textAttributes","blocks","blockList","getBlockAtIndex","consolidateBlocks","copyUsingObjectsFromDocument","sourceDocument","copyWithBaseBlockAttributes","replaceBlock","oldBlock","newBlock","insertDocumentAtRange","locationFromPosition","getBlockAtPosition","mergeDocumentAtRange","formattedDocument","startPosition","startLocation","baseBlockAttributes","getBaseBlockAttributes","trailingBlockAttributes","leadingBlockAttributes","blockCount","getBlockCount","firstBlock","firstText","insertTextAtRange","leftPosition","rightPosition","leftLocation","rightLocation","locationRangeFromRange","leftOffset","leftBlock","rightOffset","rightBlock","leftText","rightText","affectedBlockCount","getDocumentAtRange","movingRightward","eachBlockAtRange","textRange","eachBlock","insertBlockBreakAtRange","applyBlockAttributeAtRange","expanded","expandRangeToLineBreaksAndSplitBlocks","blockConfig","removeLastListAttributeAtRange","exceptAttributeName","converted","convertLineBreaksToBlockBreaksInRange","exclusive","removeBlockAttributesAtRange","removeLastTerminalAttributeAtRange","consolidateBlocksAtRange","lastAttributeName","endLocation","startBlock","positionFromLocation","endBlock","getTextAtIndex","_this$getBlockAtIndex","getTextAtPosition","getCharacterAtPosition","getEditCount","editCount","getCommonAttributesAtPosition","attributesForBlock","commonAttributes","attributesLeft","inheritableAttributes","getRangeOfCommonAttributeAtPosition","blockIndex","lastAttributeIndex","min","findRangesForBlockAttribute","ranges","findRangesForTextAttribute","withValue","location","locationRangeFromPosition","rangeFromLocationRange","locationRange","getTexts","toSerializableDocument","DEFAULT_ALLOWED_ATTRIBUTES","DEFAULT_FORBIDDEN_PROTOCOLS","DEFAULT_FORBIDDEN_ELEMENTS","HTMLSanitizer","sanitizer","sanitize","allowedAttributes","forbiddenProtocols","forbiddenElements","body","createBodyElementForHTML","sanitizeElements","normalizeListElementNesting","getHTML","getBody","walker","nodesToRemove","nextNode","currentNode","elementIsRemovable","sanitizeElement","protocol","_ref","listElement","previousElement","previousElementSibling","elementIsForbidden","elementIsntSerializable","doc","implementation","createHTMLDocument","head","pieceForString","HTMLParser","referenceElement","blockElements","processedElements","getDocument","createHiddenContainer","containerElement","nodeFilter","processNode","translateBlockElementMarginsToNewlines","removeHiddenContainer","display","insertBefore","nextSibling","isInsignificantTextNode","appendBlockForTextNode","processTextNode","appendBlockForElement","processElement","currentBlockElement","isBlockElement","appendStringWithAttributes","_this$currentBlock","getBlockAttributes","currentBlock","appendBlockForAttributesWithElement","elementIsBlockElement","currentBlockContainsElement","parentBlockElement","findParentBlockElement","appendEmptyBlock","parentElement","_node$previousSibling","elementCanDisplayPreformattedText","stringEndsWithWhitespace","leftTrimBreakableWhitespace","getTextAttributes","isExtraBR","contentType","width","height","dimensions","getImageDimensions","needsTableSeparator","blockForAttributes","appendPiece","appendStringToTextAtIndex","prependStringToTextAtIndex","unshift","configAttr","attributeInheritedFromBlock","blockElement","findBlockElementAncestors","attrConfig","_attrConfig$test","reverse","ancestors","stringIsAllBreakableWhitespace","nodeEndsWithNonWhitespace","_element$previousSibl","content","defaultMargin","getMarginOfDefaultBlockElement","margin","getMarginOfBlockElementAtIndex","top","bottom","getBlockElementMargin","whiteSpace","marginTop","marginBottom","FILTER_REJECT","FILTER_ACCEPT","unserializableAttributeNames","serializedAttributesSelector","serializedAttributesAttribute","blockCommentPattern","serializers","serializable","HTMLElement","el","LineBreakInsertion","composition","selectedRange","getSelectedRange","previousCharacter","nextCharacter","shouldInsertBlockBreak","shouldBreakFormattedBlock","shouldDecreaseListLevel","shouldPrependListItem","shouldRemoveLastBlockAttribute","Composition","currentAttributes","revision","_this$delegate","_this$delegate$compos","delegate","compositionDidChangeDocument","getSnapshot","loadSnapshot","_this$delegate2","_this$delegate2$compo","_this$delegate3","_this$delegate3$compo","compositionWillLoadSnapshot","setSelection","compositionDidLoadSnapshot","insertText","updatePosition","notifyDelegateOfInsertionAtRange","insertBlock","insertDocument","insertString","getCurrentTextAttributes","insertBlockBreak","insertLineBreak","insertion","decreaseListLevel","removeLastBlockAttribute","breakFormattedBlock","insertHTML","replaceHTML","getLocationRange","shouldManageDeletingInDirection","deleteInDirection","deletingIntoPreviousBlock","selectionSpansBlocks","selectionIsCollapsed","canDecreaseBlockAttributeLevel","getBlock","decreaseBlockAttributeLevel","getExpandedRangeInDirection","moveTextFromRange","removeCurrentAttribute","insertPlaceholder","placeholderPosition","getPosition","selectPlaceholder","setSelectedRange","forgetPlaceholder","hasCurrentAttribute","toggleCurrentAttribute","setCurrentAttribute","canSetCurrentAttribute","canSetCurrentBlockAttribute","canSetCurrentTextAttribute","getSelectedDocument","setBlockAttribute","setTextAttribute","notifyDelegateOfCurrentAttributesChange","removeBlockAttribute","updateCurrentAttributes","removeTextAttribute","canDecreaseNestingLevel","_this$getBlock","canIncreaseNestingLevel","previousBlock","getPreviousBlock","arrayStartsWith","_this$getBlock2","_this$getBlock3","attributeLevel","ignoreLock","getCurrentAttributes","freezeSelection","thawSelection","hasFrozenSelection","_this$delegate4","compositionDidRequestChangingSelectionToLocationRange","getSelectionManager","setLocationRange","targetLocationRange","withTargetLocationRange","withTargetRange","withTargetDOMRange","createLocationRangeFromDOMRange","translateUTF16PositionFromOffset","moveCursorInDirection","expandSelectionInDirection","expandSelectionForEditing","expandSelectionAroundCommonAttribute","selectionIsInCursorTarget","positionIsCursorTarget","locationIsCursorTarget","positionIsBlockBreak","_this$document$getPie","newDocument","_this$delegate5","_this$delegate5$compo","compositionDidChangeCurrentAttributes","_this$delegate6","_this$delegate6$compo","compositionDidPerformInsertionAtRange","utf16string","utf16position","UndoManager","undoEntries","redoEntries","recordUndoEntry","description","consolidatable","previousEntry","entryHasDescriptionAndContext","undoEntry","createEntry","pop","redoEntry","snapshot","canUndo","canRedo","entry","Editor","undoManager","loadDocument","loadHTML","loadJSON","getClientRectAtPosition","getClientRectAtLocationRange","activateAttribute","attributeIsActive","canActivateAttribute","deactivateAttribute","LocationMapper","findLocationFromContainerAndOffset","container","foundBlock","nodeLength","findContainerAndOffsetFromLocation","nodeOffset","findNodeAndOffsetFromLocation","getSignificantNodesForIndex","acceptSignificantNodes","recordingNodes","rejectEmptyTextNodes","PointMapper","createDOMRangeFromPoint","x","y","caretPositionFromPoint","offsetNode","createRange","setStart","caretRangeFromPoint","createTextRange","originalDOMRange","moveToPoint","select","getClientRectsForDOMRange","getClientRects","SelectionManager","didMouseDown","locationMapper","pointMapper","lockCount","currentLocationRange","lockedLocationRange","createDOMRangeFromLocationRange","updateCurrentLocationRange","setLocationRangeFromPointRange","pointRange","getLocationAtPoint","lock","unlock","clearSelection","_getDOMRange","collapsed","selectionIsExpanded","domRangeWithinElement","pauseTemporarily","resumeHandlers","paused","resume","clearTimeout","resumeTimeout","_this$delegate$locati","locationRangeDidChange","rangeStart","rangeEnd","setEnd","point","_this$createLocationR","CompositionController","didFocus","didBlur","documentView","_this$blurPromise","focused","compositionControllerDidFocus","then","blurPromise","compositionControllerDidBlur","getSerializableElement","_this$delegate4$compo","canSyncDocumentView","compositionControllerWillSyncDocumentView","compositionControllerDidSyncDocumentView","compositionControllerDidRender","rerenderViewForObject","refreshViewCache","Controller","mutableSelector","mutableAttributeName","childList","characterData","characterDataOldValue","subtree","MutationObserver","didMutate","observer","observe","disconnect","mutations","_this$delegate$elemen","findSignificantMutations","elementDidMutate","getMutationSummary","mutation","mutationIsSignificant","nodeIsMutable","nodesModifiedByMutation","nodeIsSignificant","addedNodes","removedNodes","getTextMutationSummary","additions","deletions","getTextChangesFromCharacterData","textChanges","getTextChangesFromChildList","addition","summary","added","textAdded","deleted","textDeleted","getMutationsByType","textRemoved","getTextForNodes","removed","characterMutations","startMutation","endMutation","summarized","oldString","newString","summarizeStringChange","oldValue","FlakyAndroidKeyboardDetector","shouldIgnore","previousEvent","checkSamsungKeyboardBuggyModeStart","checkSamsungKeyboardBuggyModeEnd","buggyMode","insertingLongTextAfterUnidentifiedChar","differsInWhitespace","innerText","inputType","_this$event$data","isBeforeInputInsertText","previousEventWasUnidentifiedKeydown","_this$previousEvent","_this$previousEvent2","text1","text2","normalize","whiteSpaceNormalizerRegexp","OBJECT_REPLACEMENT_CHARACTER","ZERO_WIDTH_SPACE","InputController","mutationObserver","flakyKeyboardDetector","events","handlerFor","mutationSummary","editorWillSyncDocumentView","editorDidSyncDocumentView","requestRender","_this$delegate$inputC","inputControllerDidRequestRender","requestReparse","_this$delegate2$input","inputControllerDidRequestReparse","defaultPrevented","handleInput","inputControllerWillHandleInput","inputControllerDidHandleInput","createLinkHTML","outerHTML","Level2InputController","scheduledRender","composing","inputControllerDidAllowUnhandledInput","reparse","scheduleRender","_this$afterRender","cancelAnimationFrame","afterRender","inputControllerWillPerformTyping","_this$responder","responder","toggleAttributeIfSupported","inputControllerWillPerformFormatting","_this$responder2","activateAttributeIfSupported","_this$responder3","_this$delegate7","_this$responder4","getTargetDOMRange","minLength","_this$responder5","_this$event$getTarget","_this$event","targetRanges","getTargetRanges","staticRangeToRange","withEvent","keydown","_this$delegate8","command","keyboardCommandFromKeyEvent","inputControllerDidReceiveKeyboardCommand","altKey","shiftKey","paste","_event$clipboardData","clipboardData","getData","_this$delegate9","_this$responder6","_this$delegate10","_this$delegate11","_this$responder7","_this$delegate12","pasteEventHasPlainTextOnly","inputControllerWillPaste","inputControllerDidPaste","beforeinput","inputTypes","compositionend","Backspace","_this$responder8","_this$delegate13","_this$responder9","Tab","_this$responder10","_this$responder11","_this$responder12","_this$responder13","deleteByComposition","deleteByCut","deleteByDrag","_this$responder14","deleteByDragRange","deleteCompositionText","deleteContent","deleteContentBackward","deleteContentForward","deleteEntireSoftLine","deleteHardLineBackward","deleteHardLineForward","deleteSoftLineBackward","deleteSoftLineForward","deleteWordBackward","deleteWordForward","formatBackColor","formatBold","formatFontColor","formatFontName","formatIndent","_this$responder15","_this$responder16","formatItalic","formatJustifyCenter","formatJustifyFull","formatJustifyLeft","formatJustifyRight","formatOutdent","_this$responder17","_this$responder18","formatRemove","_this$responder19","_this$responder20","formatSetBlockTextDirection","formatSetInlineTextDirection","formatStrikeThrough","formatSubscript","formatSuperscript","formatUnderline","historyRedo","_this$delegate14","inputControllerWillPerformRedo","historyUndo","_this$delegate15","inputControllerWillPerformUndo","insertCompositionText","insertFromComposition","insertFromDrop","_this$delegate16","inputControllerWillMoveText","_this$responder21","insertFromPaste","dataTransfer","_this$delegate17","_this$responder22","_this$delegate18","DOMParser","parseFromString","dataTransferIsPlainText","_this$delegate19","_this$responder23","_this$delegate20","_this$delegate21","_this$responder24","_this$delegate22","insertFromYank","insertLink","insertOrderedList","insertParagraph","_this$delegate23","_this$responder25","insertReplacementText","_this$event$dataTrans","insertTranspose","insertUnorderedList","staticRange","clipboard","toolbarButtonSelector","activeDialogSelector","dialogSelector","dialogButtonSelector","dialogInputSelector","getInputForDialog","getAttributeName","getActionName","ToolbarController","didClickActionButton","didClickAttributeButton","didClickDialogButton","didKeyDownDialogInput","actions","resetDialogInputs","toolbarDidClickButton","actionName","getDialog","toggleDialog","toolbarDidInvokeAction","toolbarDidToggleAttribute","refreshAttributeButtons","dialogElement","keyCode","dialog","hideDialog","updateActions","refreshActionButtons","eachActionButton","disabled","updateAttributes","eachAttributeButton","dialogIsVisible","applyKeyboardCommand","keyString","button","buttonKeys","buttonKeyString","dialogName","showDialog","toolbarWillShowDialog","disabledInput","toolbarDidShowDialog","willValidate","checkValidity","focus","toolbarDidUpdateAttribute","toolbarDidRemoveAttribute","toolbarDidHideDialog","getDialogName","EditorController","editorElement","inputController","compositionController","toolbarController","toolbarElement","editor","notifyEditorElement","handlingInput","updateCurrentActions","pasting","pastedRange","loadingSnapshot","isFocused","requestedLocationRange","compositionRevisionWhenLocationRangeRequested","renderedCompositionRevision","isFocusedInvisibly","requestedRender","recordTypingUndoEntry","recordFormattingUndoEntry","inputControllerWillCutText","inputControllerDidStartDrag","locationRangeBeforeDrag","inputControllerDidReceiveDragOverPoint","inputControllerDidCancelDrag","invokeAction","selectionFrozen","canInvokeAction","actionIsExternal","_this$actions$actionN","_this$actions$actionN2","_this$actions$actionN3","_this$actions$actionN4","getCurrentActions","currentActions","runEditorFilters","filters","updateInputElement","serializer","serializeToContentType","setInputElementValue","message","documentChangedSinceLastRender","notify","getUndoContext","getLocationContext","getTimeContext","floor","Date","getTime","_this$editorElement$o","ownerDocument","RicoToolbarElement","connectedCallback","makeEditable","handleEventOnce","configureContentEditable","setDefaultParagraphSeparator","disableObjectResizing","_document$queryComman","_document","queryCommandSupported","execCommand","_document$queryComman2","_document2","RicoEditorElement","ricoId","labels","label","control","_this$ownerDocument","getElementById","toolbarId","_this$inputElement","inputElement","_this$ownerDocument2","inputId","nextElementSibling","_this$editorControlle","editorController","_this$inputElement2","_this$inputElement3","defaultValue","_this$editor","addAccessibilityRole","texts","contains","ensureAriaLabel","registerResetListener","registerClickListener","autofocus","disconnectedCallback","_this$editorControlle2","unregisterResetListener","unregisterClickListener","resetListener","resetBubbled","clickListener","clickBubbled","Rico","VERSION","core","models","controllers","observers","assign","customElements","define"],"mappings":"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"}