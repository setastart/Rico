{"version":3,"file":"rico.iife.min.js","sources":["../src/rico/config/block_attributes.js","../src/rico/config/browser.js","../src/rico/config/input.js","../src/rico/config/key_names.js","../src/rico/config/lang.js","../src/rico/config/parser.js","../src/rico/config/text_attributes.js","../src/rico/config/toolbar.js","../src/rico/config/undo.js","../src/rico/core/basic_object.js","../src/rico/core/utilities/utf16_string.js","../src/rico/core/object.js","../src/rico/core/helpers/arrays.js","../src/rico/constants.js","../src/rico/core/helpers/extend.js","../src/rico/core/helpers/dom.js","../src/rico/core/helpers/bidi.js","../src/rico/core/helpers/config.js","../src/rico/core/helpers/events.js","../src/rico/core/helpers/functions.js","../src/rico/core/helpers/objects.js","../src/rico/core/helpers/ranges.js","../src/rico/observers/selection_change_observer.js","../src/rico/core/helpers/strings.js","../src/rico/core/collections/hash.js","../src/rico/core/collections/object_group.js","../src/rico/core/collections/object_map.js","../src/rico/core/collections/element_store.js","../src/rico/core/utilities/operation.js","../src/rico/views/object_view.js","../src/rico/views/piece_view.js","../src/rico/views/text_view.js","../src/rico/views/block_view.js","../src/rico/views/document_view.js","../src/rico/models/piece.js","../src/rico/models/string_piece.js","../src/rico/models/splittable_list.js","../src/rico/models/text.js","../src/rico/models/block.js","../src/rico/models/document.js","../src/rico/models/html_sanitizer.js","../src/rico/models/html_parser.js","../src/rico/core/serialization.js","../src/rico/models/line_break_insertion.js","../src/rico/models/composition.js","../src/rico/models/undo_manager.js","../src/rico/models/editor.js","../src/rico/models/location_mapper.js","../src/rico/models/point_mapper.js","../src/rico/models/selection_manager.js","../src/rico/controllers/composition_controller.js","../src/rico/controllers/controller.js","../src/rico/observers/mutation_observer.js","../src/rico/models/flaky_android_keyboard_detector.js","../src/rico/controllers/input_controller.js","../src/rico/controllers/level_2_input_controller.js","../src/rico/controllers/toolbar_controller.js","../src/rico/controllers/editor_controller.js","../src/rico/elements/rico_toolbar_element.js","../src/rico/elements/rico_editor_element.js","../src/rico/rico.js"],"sourcesContent":["const attributes = {\n  default: {\n    tagName: \"p\",\n    breakOnReturn: true,\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  heading2: {\n    tagName: \"h2\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    htmlAttributes: [ \"language\" ],\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n","const androidVersionMatch = navigator.userAgent.match(/android\\s([0-9]+.*Chrome)/i)\nconst androidVersion = androidVersionMatch && parseInt(androidVersionMatch[1])\n\nexport default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n\n  // Android 13, especially on Samsung keyboards, emits extra compositionend and beforeinput events\n  // that can make the input handler lose the current selection or enter an infinite input -> render -> input\n  // loop.\n  recentAndroid: androidVersion && androidVersion > 12,\n  samsungAndroid: androidVersion && navigator.userAgent.match(/Android.*SM-/),\n\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: typeof InputEvent !== \"undefined\" &&\n    [ \"data\", \"getTargetRanges\", \"inputType\" ].every(prop => prop in InputEvent.prototype),\n}\n","import browser from \"rico/config/browser\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  }\n}\n\nexport default input\n","export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n","export default {\n  bold: \"Bold\",\n  bullets: \"Bulleted list\",\n  code: \"Preformatted text\",\n  heading1: \"Heading T1\",\n  heading2: \"Heading T2\",\n  heading3: \"Heading T3\",\n  indent: \"Indent\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbered list\",\n  outdent: \"Outdent\",\n  quote: \"Quoted text\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  small: \"Small\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URLâ€¦\",\n}\n","export default {\n  removeBlankTableCells: false,\n  tableCellSeparator: \" | \",\n  tableRowSeparator: \"\\n\",\n}\n","export default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  small: {\n    tagName: \"small\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"small\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = \"a\"\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n","import lang from \"rico/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"rico-button-row\">\n      <span class=\"rico-button-group rico-button-group-text-tools\" data-rico-button-group=\"text-tools\">\n        <button type=\"button\" class=\"rico-button rico-button-bold\" data-rico-attribute=\"bold\" data-rico-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"rico-button rico-button-italic\" data-rico-attribute=\"italic\" data-rico-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"rico-button rico-button-small\" data-rico-attribute=\"small\" data-rico-key=\"shift+b\" title=\"${lang.small}\" tabindex=\"-1\">${lang.small}</button>\n        <button type=\"button\" class=\"rico-button rico-button-strike\" data-rico-attribute=\"strike\" data-rico-key=\"shift+i\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"rico-button rico-button-link\" data-rico-attribute=\"href\" data-rico-action=\"link\" data-rico-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"rico-button-group rico-button-group-block-tools\" data-rico-button-group=\"block-tools\">\n        <button type=\"button\" class=\"rico-button rico-button-heading1\" data-rico-attribute=\"heading1\" data-rico-key=\"g\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"rico-button rico-button-heading2\" data-rico-attribute=\"heading2\" data-rico-key=\"shift+g\" title=\"${lang.heading2}\" tabindex=\"-1\">${lang.heading2}</button>\n        \n        <button type=\"button\" class=\"rico-button rico-button-quote\" data-rico-attribute=\"quote\" data-rico-key=\"e\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"rico-button rico-button-code\" data-rico-attribute=\"code\" data-rico-key=\"shift+e\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        \n        <button type=\"button\" class=\"rico-button rico-button-bullets\" data-rico-attribute=\"bullet\" data-rico-key=\".\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"rico-button rico-button-numbers\" data-rico-attribute=\"number\" data-rico-key=\"shift+.\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        \n        <button type=\"button\" class=\"rico-button rico-button-unindent\" data-rico-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"rico-button rico-button-indent\" data-rico-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"rico-button-group rico-button-group-history-tools\" data-rico-button-group=\"history-tools\">\n        <button type=\"button\" class=\"rico-button rico-button-undo\" data-rico-action=\"undo\" data-rico-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"rico-button rico-button-redo\" data-rico-action=\"redo\" data-rico-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"rico-dialogs\" data-rico-dialogs>\n      <div class=\"rico-dialog rico-dialog-link\" data-rico-dialog=\"href\" data-rico-dialog-attribute=\"href\">\n        <div class=\"rico-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"rico-input rico-input-dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-rico-input>\n          <div class=\"rico-button-group\">\n            <input type=\"button\" class=\"rico-button rico-button-dialog\" value=\"${lang.link}\" data-rico-method=\"setAttribute\">\n            <input type=\"button\" class=\"rico-button rico-button-dialog\" value=\"${lang.unlink}\" data-rico-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n","const undo = { interval: 5000 }\nexport default undo\n","export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n","import BasicObject from \"rico/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n","import BasicObject from \"rico/core/basic_object\"\nimport UTF16String from \"rico/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class RicoObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n","export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n","export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n","import blockAttributes from \"rico/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"rico/constants\"\nimport { extend } from \"./extend\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.ricoCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n","import { makeElement } from \"rico/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const textArea = makeElement(\"textarea\", { dir: \"auto\", name: \"y\", dirName: \"y.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n  form.appendChild(textArea)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(textArea.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      textArea.value = string\n      return new FormData(form).get(textArea.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n","import * as config from \"rico/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n","const testTransferData = { \"application/x-rico-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n","export const defer = (fn) => setTimeout(fn, 1)\n","/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n","import { copyObject, objectsAreEqual } from \"rico/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n","import BasicObject from \"rico/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      document.addEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((sm) => sm !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    this.notifySelectionManagersOfSelectionChange()\n  }\n\n  reset() {\n    this.update()\n  }\n}\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n","/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"rico/constants\"\nimport UTF16String from \"rico/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n?/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n","import RicoObject from \"rico/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"rico/core/helpers\"\n\nexport default class Hash extends RicoObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n","export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n","import BasicObject from \"rico/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n","export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.ricoStoreKey\n","import BasicObject from \"rico/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n","import BasicObject from \"rico/core/basic_object\"\nimport ObjectGroup from \"rico/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-rico-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n","/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"rico/constants\"\n\nimport ObjectView from \"rico/views/object_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"rico/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    this.string = this.piece.toString()\n  }\n\n  createNodes() {\n    let nodes = this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n","/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"rico/views/object_view\"\nimport ObjectGroup from \"rico/core/collections/object_group\"\nimport PieceView from \"rico/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n","import * as config from \"rico/config\"\nimport ObjectView from \"rico/views/object_view\"\nimport TextView from \"rico/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"rico/core/helpers\"\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    const attributes = {}\n    let className\n    const attributeName = this.attributes[depth]\n\n    const { tagName, htmlAttributes = [] } = getBlockConfig(attributeName)\n\n    if (depth === 0 && this.block.isRTL()) {\n      Object.assign(attributes, { dir: \"rtl\" })\n    }\n\n    Object.entries(this.block.htmlAttributes).forEach(([ name, value ]) => {\n      if (htmlAttributes.includes(name)) {\n        attributes[name] = value\n      }\n    })\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n","import { makeElement } from \"rico/core/helpers\"\n\nimport ElementStore from \"rico/core/collections/element_store\"\nimport ObjectGroup from \"rico/core/collections/object_group\"\nimport ObjectView from \"rico/views/object_view\"\nimport BlockView from \"rico/views/block_view\"\n\nimport { defer } from \"rico/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-rico-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n","import RicoObject from \"rico/core/object\" // Don't override window.Object\nimport Hash from \"rico/core/collections/hash\"\n\nexport default class Piece extends RicoObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n","import Piece from \"rico/models/piece\"\n\nimport { normalizeNewlines } from \"rico/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"â€¦\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n","/* eslint-disable\n    prefer-const,\n*/\nimport RicoObject from \"rico/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"rico/core/helpers\"\n\nexport default class SplittableList extends RicoObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n","import RicoObject from \"rico/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"rico/core/helpers\"\n\nimport Piece from \"rico/models/piece\"\nimport StringPiece from \"rico/models/string_piece\"\nimport SplittableList from \"rico/models/splittable_list\"\n\nimport Hash from \"rico/core/collections/hash\"\n\nexport default class Text extends RicoObject {\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n","import RicoObject from \"rico/core/object\" // Don't override window.Object\nimport Text from \"rico/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  objectsAreEqual,\n  spliceArray,\n} from \"rico/core/helpers\"\n\nexport default class Block extends RicoObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes, blockJSON.htmlAttributes)\n  }\n\n  constructor(text, attributes, htmlAttributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n    this.htmlAttributes = htmlAttributes || {}\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes) && objectsAreEqual(this.htmlAttributes, block?.htmlAttributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes, this.htmlAttributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes, this.htmlAttributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  addHTMLAttribute(attribute, value) {\n    const htmlAttributes = Object.assign({}, this.htmlAttributes, { [attribute]: value })\n    return new Block(this.text, this.attributes, htmlAttributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    const attr = this.getLastAttribute()\n    const config = getBlockConfig(attr ? attr : \"default\")\n    return config ? config.breakOnReturn : false\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n      htmlAttributes: this.htmlAttributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n","import * as config from \"rico/config\"\nimport RicoObject from \"rico/core/object\" // Don't override window.Object\n\nimport Text from \"rico/models/text\"\nimport Block from \"rico/models/block\"\nimport SplittableList from \"rico/models/splittable_list\"\nimport Hash from \"rico/core/collections/hash\"\nimport ObjectMap from \"rico/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"rico/core/helpers\"\n\nexport default class Document extends RicoObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray().map((block) => JSON.parse(block.text.toConsole())))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n","import BasicObject from \"rico/core/basic_object\"\n\nimport { removeNode, tagName, walkTree } from \"rico/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height language class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe form\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-rico\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-rico-serialize\") === \"false\"\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n","/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"rico/config\"\nimport BasicObject from \"rico/core/basic_object\"\nimport Document from \"rico/models/document\"\nimport HTMLSanitizer from \"rico/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"rico/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}, htmlAttributes = {}) => {\n  const text = []\n  return { text, attributes, htmlAttributes }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      const html = HTMLSanitizer.sanitize(this.html).getHTML()\n      this.containerElement.innerHTML = html\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-rico-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      const htmlAttributes = this.getBlockHTMLAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        const htmlAttributes = this.getBlockHTMLAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    switch (tagName(element)) {\n      case \"br\":\n        if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n          this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n        }\n        return this.processedElements.push(element)\n      case \"img\":\n        attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n        const object = getImageDimensions(element)\n        for (const key in object) {\n          const value = object[key]\n          attributes[key] = value\n        }\n        return this.processedElements.push(element)\n      case \"tr\":\n        if (this.needsTableSeparator(element)) {\n          return this.appendStringWithAttributes(config.parser.tableRowSeparator)\n        }\n        break\n      case \"td\":\n        if (this.needsTableSeparator(element)) {\n          return this.appendStringWithAttributes(config.parser.tableCellSeparator)\n        }\n        break\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element, htmlAttributes = {}) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes, htmlAttributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  getBlockHTMLAttributes(element) {\n    const attributes = {}\n    const blockConfig = Object.values(config.blockAttributes).find(settings => settings.tagName === tagName(element))\n    const allowedAttributes = blockConfig?.htmlAttributes || []\n\n    allowedAttributes.forEach((attribute) => {\n      if (element.hasAttribute(attribute)) {\n        attributes[attribute] = element.getAttribute(attribute)\n      }\n    })\n\n    return attributes\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  needsTableSeparator(element) {\n    if (config.parser.removeBlankTableCells) {\n      const content = element.previousSibling?.textContent\n      return content && /\\S/.test(content)\n    } else {\n      return element.previousSibling\n    }\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n//Â Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n","/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"rico/core/helpers\"\n\nimport DocumentView from \"rico/views/document_view\"\nimport Document from \"rico/models/document\"\nimport HTMLParser from \"rico/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-rico-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-rico-id\",\n  \"data-rico-store-key\",\n  \"data-rico-mutable\",\n  \"data-rico-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-rico-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n","export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return !this.shouldBreakFormattedBlock() ? this.breaksOnReturn : false\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n","import BasicObject from \"rico/core/basic_object\"\nimport Text from \"rico/models/text\"\nimport Block from \"rico/models/block\"\nimport Document from \"rico/models/document\"\nimport HTMLParser from \"rico/models/html_parser\"\nimport LineBreakInsertion from \"rico/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n} from \"rico/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n    }\n\n    this.setDocument(this.document.removeTextAtRange(range))\n    this.setSelection(range[0])\n    if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n      return false\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setHTMLAtributeAtPosition(position, attributeName, value) {\n    const block = this.document.getBlockAtPosition(position)\n    const allowedHTMLAttributes = getBlockConfig(block.getLastAttribute())?.htmlAttributes\n\n    if (block && allowedHTMLAttributes?.includes(attributeName)) {\n      const newDocument = this.document.setHTMLAttributeAtPosition(position, attributeName, value)\n      this.setDocument(newDocument)\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  moveCursorInDirection(direction) {\n    const range = this.getExpandedRangeInDirection(direction)\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionIsInCursorTarget() {\n    return this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n","import BasicObject from \"rico/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n","import Document from \"rico/models/document\"\nimport HTMLParser from \"rico/models/html_parser\"\n\nimport UndoManager from \"rico/models/undo_manager\"\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // HTML attributes\n  setHTMLAtributeAtPosition(position, name, value) {\n    this.composition.setHTMLAtributeAtPosition(position, name, value)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n","/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"rico/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n\n    const walker = walkTree(this.element)\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\") {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return NodeFilter.FILTER_ACCEPT\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n","/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"rico/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n","/* eslint-disable\n*/\nimport BasicObject from \"rico/core/basic_object\"\n\nimport LocationMapper from \"rico/models/location_mapper\"\nimport PointMapper from \"rico/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"rico/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n","import BasicObject from \"rico/core/basic_object\"\nimport DocumentView from \"rico/views/document_view\"\n\nimport { defer, handleEvent, innerElementIsActive } from \"rico/core/helpers\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  getSerializableElement() {\n    return this.element\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return true\n  }\n\n}\n","import \"rico/views/object_view\"\nimport BasicObject from \"rico/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n","import BasicObject from \"rico/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"rico/core/helpers\"\n\nconst mutableAttributeName = \"data-rico-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n","import * as config from \"rico/config\"\nimport { NON_BREAKING_SPACE, OBJECT_REPLACEMENT_CHARACTER, ZERO_WIDTH_SPACE } from \"rico/constants\"\n\n// Each software keyboard on Android emits its own set of events and some of them can be buggy.\n// This class detects when some buggy events are being emitted and lets know the input controller\n// that they should be ignored.\nexport default class FlakyAndroidKeyboardDetector {\n  constructor(element) {\n    this.element = element\n  }\n\n  shouldIgnore(event) {\n    if (!config.browser.samsungAndroid) return false\n\n    this.previousEvent = this.event\n    this.event = event\n\n    this.checkSamsungKeyboardBuggyModeStart()\n    this.checkSamsungKeyboardBuggyModeEnd()\n\n    return this.buggyMode\n  }\n\n  // private\n\n  // The Samsung keyboard on Android can enter a buggy state in which it emits a flurry of confused events that,\n  // if processed, corrupts the editor. The buggy mode always starts with an insertText event, right after a\n  // keydown event with for an \"Unidentified\" key, with the same text as the editor element, except for a few\n  // extra whitespace, or exotic utf8, characters.\n  checkSamsungKeyboardBuggyModeStart() {\n    if (this.insertingLongTextAfterUnidentifiedChar() && differsInWhitespace(this.element.innerText, this.event.data)) {\n      this.buggyMode = true\n      this.event.preventDefault()\n    }\n  }\n\n  // The flurry of buggy events are always insertText. If we see any other type, it means it's over.\n  checkSamsungKeyboardBuggyModeEnd() {\n    if (this.buggyMode && this.event.inputType !== \"insertText\") {\n      this.buggyMode = false\n    }\n  }\n\n  insertingLongTextAfterUnidentifiedChar() {\n    return this.isBeforeInputInsertText() && this.previousEventWasUnidentifiedKeydown() && this.event.data?.length > 50\n  }\n\n  isBeforeInputInsertText() {\n    return this.event.type === \"beforeinput\" && this.event.inputType === \"insertText\"\n  }\n\n  previousEventWasUnidentifiedKeydown() {\n    return this.previousEvent?.type === \"keydown\" && this.previousEvent?.key === \"Unidentified\"\n  }\n}\n\nconst differsInWhitespace = (text1, text2) => {\n  return normalize(text1) === normalize(text2)\n}\n\nconst whiteSpaceNormalizerRegexp = new RegExp(`(${OBJECT_REPLACEMENT_CHARACTER}|${ZERO_WIDTH_SPACE}|${NON_BREAKING_SPACE}|\\\\s)+`, \"g\")\nconst normalize = (text) => text.replace(whiteSpaceNormalizerRegexp, \" \").trim()\n","import BasicObject from \"rico/core/basic_object\"\nimport MutationObserver from \"rico/observers/mutation_observer\"\nimport FlakyAndroidKeyboardDetector from \"../models/flaky_android_keyboard_detector\"\n\nimport { handleEvent, innerElementIsActive } from \"rico/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    this.flakyKeyboardDetector = new FlakyAndroidKeyboardDetector(this.element)\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            if (this.flakyKeyboardDetector.shouldIgnore(event)) return\n\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n","import { getAllAttributeNames, squishBreakableWhitespace } from \"rico/core/helpers\"\nimport InputController from \"rico/controllers/input_controller\"\nimport * as config from \"rico/config\"\n\nimport { dataTransferIsPlainText, keyEventIsKeyboardCommand } from \"rico/core/helpers\"\n\nimport { selectionChangeObserver } from \"rico/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n\n      if (handler) {\n        this.withEvent(event, handler)\n        this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      selectionChangeObserver.reset()\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        if (!config.browser.recentAndroid) this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Enter+Shift\"() {\n      this.event.preventDefault()\n      this.insertString(\"\\n\")\n      this.scheduleRender()\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      const replacement = this.event.dataTransfer.getData(\"text/plain\")\n      const domRange = this.event.getTargetRanges()[0]\n\n      this.withTargetDOMRange(domRange, () => {\n        this.insertString(replacement, { updatePosition: false })\n      })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n","import BasicObject from \"rico/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"rico/core/helpers\"\n\nconst attributeButtonSelector = \"[data-rico-attribute]\"\nconst actionButtonSelector = \"[data-rico-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-rico-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-rico-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-rico-method]`\nconst dialogInputSelector = `${dialogSelector} [data-rico-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-rico-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-rico-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-rico-attribute\") || element.getAttribute(\"data-rico-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-rico-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName, element)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-rico-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-rico-active\", \"\")\n        return element.classList.add(\"rico-active\")\n      } else {\n        element.removeAttribute(\"data-rico-active\")\n        return element.classList.remove(\"rico-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-rico-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-rico-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-rico-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-rico-active\", \"\")\n    element.classList.add(\"rico-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-rico-validate\", \"\")\n      input.classList.add(\"rico-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-rico-active\")\n      element.classList.remove(\"rico-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-rico-validate\")\n      input.classList.remove(\"rico-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-rico-dialog=${dialogName}]`)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport * as config from \"rico/config\"\n\nimport { serializeToContentType } from \"rico/core/serialization\"\n\nimport Controller from \"rico/controllers/controller\"\nimport Level2InputController from \"rico/controllers/level_2_input_controller\"\nimport CompositionController from \"rico/controllers/composition_controller\"\nimport ToolbarController from \"rico/controllers/toolbar_controller\"\nimport Composition from \"rico/models/composition\"\nimport Editor from \"rico/models/editor\"\nimport SelectionManager from \"rico/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"rico/core/helpers\"\nimport { selectionChangeObserver } from \"rico/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.inputController = new Level2InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName, invokingElement) {\n    return this.invokeAction(actionName, invokingElement)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName, invokingElement) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName, invokingElement })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n","import * as config from \"rico/config\"\n\n\nexport default class RicoToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n","import * as config from \"rico/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  makeElement,\n  triggerEvent,\n} from \"rico/core/helpers\"\n\nimport EditorController from \"rico/controllers/editor_controller\"\nimport \"rico/elements/rico_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nexport default class RicoEditorElement extends HTMLElement {\n\n  // Properties\n\n  get ricoId() {\n    if (this.hasAttribute(\"rico-id\")) {\n      return this.getAttribute(\"rico-id\")\n    } else {\n      this.setAttribute(\"rico-id\", ++id)\n      return this.ricoId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `rico-toolbar-${this.ricoId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"rico-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `rico-input-${this.ricoId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`rico-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-rico-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"rico-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"rico-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) return\n    if (event.target !== this.form) return\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n","import { version } from \"../../package.json\"\n\nimport * as config from \"rico/config\"\nimport * as core from \"rico/core\"\nimport * as models from \"rico/models\"\nimport * as views from \"rico/views\"\nimport * as controllers from \"rico/controllers\"\nimport * as observers from \"rico/observers\"\nimport * as elements from \"rico/elements\"\n\nconst Rico = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  elements\n}\n\n// Expose models under the Rico constant for compatibility with v1\nObject.assign(Rico, models)\n\nfunction start() {\n  if (!customElements.get(\"rico-toolbar\")) {\n    customElements.define(\"rico-toolbar\", elements.RicoToolbarElement)\n  }\n\n  if (!customElements.get(\"rico-editor\")) {\n    customElements.define(\"rico-editor\", elements.RicoEditorElement)\n  }\n}\n\nwindow.Rico = Rico\nsetTimeout(start, 0)\n\nexport default Rico\n"],"names":["attributes","default","tagName","breakOnReturn","parse","quote","heading1","terminal","group","heading2","code","htmlAttributes","text","plaintext","bulletList","bullet","listAttribute","nestable","test","element","parentNode","this","numberList","number","_element$tagName","toLowerCase","androidVersionMatch","navigator","userAgent","match","androidVersion","parseInt","browser","composesExistingText","recentAndroid","samsungAndroid","forcesObjectResizing","supportsInputEvents","InputEvent","every","prop","prototype","input","level2Enabled","getLevel","lang","bold","bullets","heading3","indent","italic","link","numbers","outdent","redo","remove","small","strike","undo","unlink","url","urlPlaceholder","parser","removeBlankTableCells","tableCellSeparator","tableRowSeparator","text_attributes","inheritable","style","window","getComputedStyle","fontWeight","fontStyle","href","groupTagName","matchingSelector","closest","getAttribute","frozen","backgroundColor","toolbar","getDefaultHTML","concat","interval","BasicObject","proxyMethod","expression","name","toMethod","toProperty","optional","parseProxyMethodExpression","subject","object","_this$toMethod","_object","call","apply","arguments","proxyMethodExpressionPattern","Error","args","Function","RegExp","UTF16String","static","value","fromUCS2String","toString","ucs2String","ucs2decode","fromCodepoints","codepoints","ucs2encode","constructor","super","length","ucs2Length","offsetToUCS2Offset","offset","slice","Math","max","offsetFromUCS2Offset","ucs2Offset","charAt","isEqualTo","box","toJSON","getCacheKey","hasArrayFrom","Array","from","_Array$from","hasStringCodePointAt","_$codePointAt","codePointAt","hasStringFromCodePoint","String","_String$fromCodePoint","fromCodePoint","string","map","char","output","counter","charCodeAt","extra","push","array","result","forEach","fromCharCode","join","id","RicoObject","fromJSONString","jsonString","fromJSON","JSON","hasSameConstructorAs","inspect","parts","contents","contentsForInspection","key","toJSONString","stringify","toUTF16String","arraysAreEqual","a","b","index","spliceArray","_len","_key","splice","ZERO_WIDTH_SPACE","NON_BREAKING_SPACE","extend","properties","html","document","documentElement","matches","handleEvent","eventName","onElement","withCallback","inPhase","preventDefault","times","selector","useCapture","handler","event","destroy","target","findClosestElementFromNode","removeEventListener","addEventListener","triggerEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","elementMatchesSelector","nodeType","node","untilNode","Node","ELEMENT_NODE","innerElementIsActive","activeElement","elementContainsNode","findChildIndexOfNode","_node","childIndex","previousSibling","removeNode","_node$parentNode","removeChild","walkTree","tree","onlyNodesOfType","usingFilter","expandEntityReferences","whatToShow","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","SHOW_ALL","createTreeWalker","makeElement","tag","options","createElement","editable","contenteditable","setAttribute","data","dataset","className","split","classList","add","textContent","childNodes","childNode","appendChild","blockTagNames","getBlockTagNames","blockAttributes","nodeIsBlockContainer","nodeIsBlockStartComment","firstChild","nodeProbablyIsBlockContainer","includes","nodeIsBlockStart","strict","undefined","nodeIsCommentNode","COMMENT_NODE","nodeIsCursorTarget","nodeIsTextNode","ricoCursorTarget","nodeIsEmptyTextNode","TEXT_NODE","RTL_PATTERN","getDirection","dir","dirName","textArea","form","supportsDirName","FormData","has","error","supportsDirSelector","get","trim","allAttributeNames","blockAttributeNames","textAttributeNames","listAttributeNames","getAllAttributeNames","getTextAttributeNames","getBlockAttributeNames","getBlockConfig","attributeName","config","Object","keys","getTextConfig","keyEventIsKeyboardCommand","platform","metaKey","ctrlKey","defer","fn","setTimeout","objectsAreEqual","normalizeRange","range","isArray","copyValue","rangeIsCollapsed","start","end","rangeValuesAreEqual","rangesAreEqual","leftRange","rightRange","leftStart","leftEnd","rightStart","rightEnd","copyObject","left","right","SelectionChangeObserver","update","bind","selectionManagers","started","stop","registerSelectionManager","selectionManager","unregisterSelectionManager","filter","sm","notifySelectionManagersOfSelectionChange","selectionDidChange","reset","selectionChangeObserver","getDOMSelection","selection","getSelection","rangeCount","getDOMRange","_getDOMSelection","domRange","getRangeAt","domRangeIsPrivate","setDOMRange","removeAllRanges","addRange","nodeIsPrivate","startContainer","endContainer","getPrototypeOf","normalizeSpaces","replace","breakableWhitespacePattern","squishBreakableWhitespace","source","utf16StringDifferences","diffA","utf16StringDifference","utf16String","diffB","leftIndex","rightIndexA","rightIndexB","Hash","objects","hash","getKeys","getKeysCommonToHash","values","copy","merge","unbox","toArray","isEmpty","toObject","keyToRemove","sort","ObjectGroup","ungroupedObjects","depth","asTree","_object$canBeGrouped2","_object$canBeGrouped","_group$canBeGroupedWi","_group","canBeGrouped","canBeGroupedWith","groupObjects","getObjects","getDepth","ObjectMap","find","ElementStore","elements","getKey","ricoStoreKey","Operation","isPerforming","performing","hasPerformed","performed","hasSucceeded","succeeded","hasFailed","getPromise","promise","Promise","resolve","reject","perform","callback","release","_this$promise","_this$promise$cancel","cancel","ObjectView","childViews","rootView","getNodes","nodes","createNodes","cloneNode","invalidate","_this$parentView","parentView","invalidateViewForObject","_this$findViewForObje","findViewForObject","findOrCreateCachedChildView","viewClass","view","getCachedViewForObject","recordChildView","createChildView","cacheViewForObject","ObjectGroupView","getAllChildViews","views","childView","findElement","findElementForObject","querySelector","getViewCache","isViewCachingEnabled","viewCache","shouldCacheViews","enableViewCaching","disableViewCaching","_this$getViewCache","cache","garbageCollectCachedViews","objectKeys","objectGroup","getChildViews","createContainerElement","PieceView","piece","getAttributes","textConfig","context","createStringNodes","innerElement","_element","firstElementChild","findInnerElement","_this$textConfig","createTextNode","iterable","substring","preserveSpaces","styles","pendingElement","styleProperty","isLast","isFirst","followsWhitespace","TextView","pieces","getPieces","lastIndex","endsWithWhitespace","previousPiece","hasAttribute","BlockView","block","createComment","_getBlockConfig","getLastAttribute","textView","shouldAddExtraNewlineElement","isRTL","assign","entries","_ref","DocumentView","render","sync","elementStore","setDocument","shadowElement","getBlocks","isSynced","elementsHaveEqualHTML","fragment","createDocumentFragmentForSync","lastChild","didSync","findStoredElements","createDocumentFragment","storedElement","replaceChild","querySelectorAll","otherElement","ignoreSpaces","innerHTML","Piece","type","types","pieceJSON","copyWithAttributes","getValue","copyWithAdditionalAttributes","copyWithoutAttribute","attribute","getAttributesHash","hasSameStringValueAsPiece","hasSameAttributesAsPiece","isBlockBreak","isSerializable","getLength","canBeConsolidatedWith","StringPiece","normalizeNewlines","consolidateWith","splitAtOffset","toConsole","registerType","SplittableList","indexOf","eachObject","insertObjectAtIndex","insertSplittableListAtIndex","splittableList","insertSplittableListAtPosition","position","splitObjectAtPosition","editObjectAtIndex","replaceObjectAtIndex","removeObjectAtIndex","getObjectAtIndex","getSplittableListInRange","rightIndex","splitObjectsAtRange","selectSplittableList","removeObjectsInRange","transformObjectsInRange","transform","transformedObjects","rightOuterIndex","leftInnerIndex","startOfRange","endOfRange","getObjectAtPosition","findIndexAndOffsetAtPosition","splitIndex","splitOffset","leftObject","rightObject","consolidate","pendingObject","_pendingObject$canBeC","_pendingObject","consolidateFromIndexToIndex","startIndex","endIndex","objectsInRange","consolidatedInRange","currentPosition","nextPosition","findPositionAtIndexAndOffset","currentIndex","getEndPosition","endPosition","objectArraysAreEqual","Text","textJSON","notEmpty","pieceList","copyWithPieceList","copyUsingObjectMap","objectMap","appendText","insertTextAtPosition","removeTextAtRange","replaceTextAtRange","moveTextFromRangeToPosition","getTextAtRange","addAttributeAtRange","addAttributesAtRange","removeAttributeAtRange","setAttributesAtRange","getAttributesAtPosition","_this$pieceList$getOb","getCommonAttributes","fromCommonAttributesOfObjects","getCommonAttributesAtRange","getExpandedRangeForAttributeAtOffset","getStringAtRange","getStringAtPosition","startsWithString","endsWithString","_text$pieceList","eachPiece","getPieceAtPosition","toSerializableText","Block","blockJSON","applyBlockBreakToText","copyWithText","copyWithoutText","copyWithoutAttributes","mappedText","addAttribute","expandAttribute","addHTMLAttribute","removeAttribute","removeLastValue","removeLastAttribute","getLastElement","getAttributeLevel","getAttributeAtLevel","level","hasAttributes","getLastNestableAttribute","getNestableAttributes","getNestingLevel","decreaseNestingLevel","increaseNestingLevel","lastIndexOf","getListItemAttributes","isListItem","isTerminalBlock","_getBlockConfig2","breaksOnReturn","attr","findLineBreakInDirectionFromPosition","direction","newlineText","textForStringWithAttributes","getTextWithoutBlockBreak","getBlockBreakPosition","textEndsInBlockBreak","otherBlock","otherAttributes","otherAttribute","getListAttributeNames","unmarkExistingInnerBlockBreaksInText","addBlockBreakToText","modified","innerPieces","lastPiece","unmarkBlockBreakPiece","blockBreakText","blockBreak","endText","Document","documentJSON","textAttributes","blocks","blockList","getBlockAtIndex","consolidateBlocks","copyUsingObjectsFromDocument","sourceDocument","copyWithBaseBlockAttributes","replaceBlock","oldBlock","newBlock","insertDocumentAtRange","locationFromPosition","getBlockAtPosition","mergeDocumentAtRange","formattedDocument","startPosition","startLocation","baseBlockAttributes","getBaseBlockAttributes","trailingBlockAttributes","leadingBlockAttributes","blockCount","getBlockCount","firstBlock","firstText","insertTextAtRange","leftPosition","rightPosition","leftLocation","rightLocation","locationRangeFromRange","leftOffset","leftBlock","rightOffset","rightBlock","leftText","rightText","affectedBlockCount","getDocumentAtRange","movingRightward","eachBlockAtRange","textRange","eachBlock","insertBlockBreakAtRange","applyBlockAttributeAtRange","expanded","expandRangeToLineBreaksAndSplitBlocks","blockConfig","removeLastListAttributeAtRange","exceptAttributeName","converted","convertLineBreaksToBlockBreaksInRange","exclusive","removeBlockAttributesAtRange","removeLastTerminalAttributeAtRange","consolidateBlocksAtRange","lastAttributeName","endLocation","startBlock","positionFromLocation","endBlock","getTextAtIndex","_this$getBlockAtIndex","getTextAtPosition","getCharacterAtPosition","getEditCount","editCount","getCommonAttributesAtPosition","attributesForBlock","commonAttributes","attributesLeft","inheritableAttributes","getRangeOfCommonAttributeAtPosition","startOffset","endOffset","blockIndex","lastAttributeIndex","min","findRangesForBlockAttribute","ranges","findRangesForTextAttribute","withValue","location","locationRangeFromPosition","rangeFromLocationRange","locationRange","getTexts","toSerializableDocument","DEFAULT_ALLOWED_ATTRIBUTES","DEFAULT_FORBIDDEN_PROTOCOLS","DEFAULT_FORBIDDEN_ELEMENTS","HTMLSanitizer","sanitizer","sanitize","allowedAttributes","forbiddenProtocols","forbiddenElements","body","createBodyElementForHTML","sanitizeElements","normalizeListElementNesting","getHTML","getBody","walker","nodesToRemove","nextNode","currentNode","elementIsRemovable","sanitizeElement","protocol","listElement","previousElement","previousElementSibling","elementIsForbidden","elementIsntSerializable","doc","implementation","createHTMLDocument","head","pieceForString","HTMLParser","referenceElement","blockElements","processedElements","getDocument","createHiddenContainer","containerElement","nodeFilter","processNode","translateBlockElementMarginsToNewlines","removeHiddenContainer","display","insertBefore","nextSibling","isInsignificantTextNode","appendBlockForTextNode","processTextNode","appendBlockForElement","processElement","currentBlockElement","isBlockElement","appendStringWithAttributes","_this$currentBlock","getBlockAttributes","getBlockHTMLAttributes","currentBlock","appendBlockForAttributesWithElement","elementIsBlockElement","currentBlockContainsElement","parentBlockElement","findParentBlockElement","appendEmptyBlock","parentElement","_node$previousSibling","elementCanDisplayPreformattedText","stringEndsWithWhitespace","leftTrimBreakableWhitespace","getTextAttributes","isExtraBR","contentType","width","height","dimensions","getImageDimensions","needsTableSeparator","blockForAttributes","appendPiece","appendStringToTextAtIndex","prependStringToTextAtIndex","unshift","configAttr","attributeInheritedFromBlock","blockElement","findBlockElementAncestors","attrConfig","_attrConfig$test","reverse","settings","ancestors","stringIsAllBreakableWhitespace","nodeEndsWithNonWhitespace","_element$previousSibl","content","defaultMargin","getMarginOfDefaultBlockElement","margin","getMarginOfBlockElementAtIndex","top","bottom","getBlockElementMargin","whiteSpace","marginTop","marginBottom","FILTER_REJECT","FILTER_ACCEPT","unserializableAttributeNames","serializedAttributesAttribute","serializedAttributesSelector","blockCommentPattern","serializers","serializable","HTMLElement","el","LineBreakInsertion","composition","selectedRange","getSelectedRange","previousCharacter","nextCharacter","shouldInsertBlockBreak","shouldBreakFormattedBlock","shouldDecreaseListLevel","shouldPrependListItem","shouldRemoveLastBlockAttribute","Composition","currentAttributes","revision","_this$delegate","_this$delegate$compos","delegate","compositionDidChangeDocument","getSnapshot","loadSnapshot","_this$delegate2","_this$delegate2$compo","_this$delegate3","_this$delegate3$compo","compositionWillLoadSnapshot","setSelection","compositionDidLoadSnapshot","insertText","updatePosition","notifyDelegateOfInsertionAtRange","insertBlock","insertDocument","insertString","getCurrentTextAttributes","insertBlockBreak","insertLineBreak","insertion","decreaseListLevel","removeLastBlockAttribute","breakFormattedBlock","insertHTML","replaceHTML","getLocationRange","shouldManageDeletingInDirection","deleteInDirection","deletingIntoPreviousBlock","selectionSpansBlocks","selectionIsCollapsed","canDecreaseBlockAttributeLevel","getBlock","decreaseBlockAttributeLevel","getExpandedRangeInDirection","moveTextFromRange","removeCurrentAttribute","insertPlaceholder","placeholderPosition","getPosition","selectPlaceholder","setSelectedRange","forgetPlaceholder","hasCurrentAttribute","toggleCurrentAttribute","setCurrentAttribute","canSetCurrentAttribute","canSetCurrentBlockAttribute","canSetCurrentTextAttribute","getSelectedDocument","setBlockAttribute","setTextAttribute","notifyDelegateOfCurrentAttributesChange","setHTMLAtributeAtPosition","allowedHTMLAttributes","newDocument","setHTMLAttributeAtPosition","removeBlockAttribute","updateCurrentAttributes","removeTextAttribute","canDecreaseNestingLevel","_this$getBlock","canIncreaseNestingLevel","previousBlock","getPreviousBlock","arrayStartsWith","_this$getBlock2","_this$getBlock3","attributeLevel","ignoreLock","getCurrentAttributes","freezeSelection","thawSelection","hasFrozenSelection","_this$delegate4","compositionDidRequestChangingSelectionToLocationRange","getSelectionManager","setLocationRange","targetLocationRange","withTargetLocationRange","withTargetRange","withTargetDOMRange","createLocationRangeFromDOMRange","translateUTF16PositionFromOffset","moveCursorInDirection","expandSelectionInDirection","expandSelectionForEditing","expandSelectionAroundCommonAttribute","selectionIsInCursorTarget","positionIsCursorTarget","locationIsCursorTarget","positionIsBlockBreak","_this$document$getPie","_this$delegate5","_this$delegate5$compo","compositionDidChangeCurrentAttributes","_this$delegate6","_this$delegate6$compo","compositionDidPerformInsertionAtRange","utf16string","utf16position","UndoManager","undoEntries","redoEntries","recordUndoEntry","description","consolidatable","previousEntry","entryHasDescriptionAndContext","undoEntry","createEntry","pop","redoEntry","snapshot","canUndo","canRedo","entry","Editor","undoManager","loadDocument","loadHTML","loadJSON","getClientRectAtPosition","getClientRectAtLocationRange","activateAttribute","attributeIsActive","canActivateAttribute","deactivateAttribute","LocationMapper","findLocationFromContainerAndOffset","container","foundBlock","nodeLength","findContainerAndOffsetFromLocation","nodeOffset","findNodeAndOffsetFromLocation","getSignificantNodesForIndex","acceptSignificantNodes","recordingNodes","rejectEmptyTextNodes","PointMapper","createDOMRangeFromPoint","x","y","caretPositionFromPoint","offsetNode","createRange","setStart","caretRangeFromPoint","createTextRange","originalDOMRange","moveToPoint","select","getClientRectsForDOMRange","getClientRects","SelectionManager","didMouseDown","locationMapper","pointMapper","lockCount","currentLocationRange","lockedLocationRange","createDOMRangeFromLocationRange","updateCurrentLocationRange","setLocationRangeFromPointRange","pointRange","getLocationAtPoint","lock","unlock","clearSelection","_getDOMRange","collapsed","selectionIsExpanded","domRangeWithinElement","pauseTemporarily","resumeHandlers","paused","resume","clearTimeout","resumeTimeout","_this$delegate$locati","locationRangeDidChange","rangeStart","rangeEnd","setEnd","point","_this$createLocationR","CompositionController","didFocus","didBlur","documentView","_this$blurPromise","focused","compositionControllerDidFocus","then","blurPromise","compositionControllerDidBlur","getSerializableElement","_this$delegate4$compo","canSyncDocumentView","compositionControllerWillSyncDocumentView","compositionControllerDidSyncDocumentView","compositionControllerDidRender","rerenderViewForObject","refreshViewCache","Controller","mutableAttributeName","mutableSelector","childList","characterData","characterDataOldValue","subtree","MutationObserver","didMutate","observer","observe","disconnect","mutations","_this$delegate$elemen","findSignificantMutations","elementDidMutate","getMutationSummary","mutation","mutationIsSignificant","nodeIsMutable","nodesModifiedByMutation","nodeIsSignificant","addedNodes","removedNodes","getTextMutationSummary","additions","deletions","getTextChangesFromCharacterData","textChanges","getTextChangesFromChildList","addition","summary","added","textAdded","deleted","textDeleted","getMutationsByType","textRemoved","getTextForNodes","removed","characterMutations","startMutation","endMutation","summarized","oldString","newString","summarizeStringChange","oldValue","FlakyAndroidKeyboardDetector","shouldIgnore","previousEvent","checkSamsungKeyboardBuggyModeStart","checkSamsungKeyboardBuggyModeEnd","buggyMode","insertingLongTextAfterUnidentifiedChar","differsInWhitespace","innerText","inputType","_this$event$data","isBeforeInputInsertText","previousEventWasUnidentifiedKeydown","_this$previousEvent","_this$previousEvent2","text1","text2","normalize","whiteSpaceNormalizerRegexp","OBJECT_REPLACEMENT_CHARACTER","InputController","mutationObserver","flakyKeyboardDetector","events","handlerFor","mutationSummary","editorWillSyncDocumentView","editorDidSyncDocumentView","requestRender","_this$delegate$inputC","inputControllerDidRequestRender","requestReparse","_this$delegate2$input","inputControllerDidRequestReparse","defaultPrevented","handleInput","inputControllerWillHandleInput","inputControllerDidHandleInput","createLinkHTML","outerHTML","Level2InputController","scheduledRender","composing","inputControllerDidAllowUnhandledInput","reparse","scheduleRender","requestAnimationFrame","_this$afterRender","cancelAnimationFrame","afterRender","inputControllerWillPerformTyping","_this$responder","responder","toggleAttributeIfSupported","inputControllerWillPerformFormatting","_this$responder2","activateAttributeIfSupported","_this$responder3","_this$delegate7","_this$responder4","getTargetDOMRange","minLength","_this$responder5","_this$event$getTarget","_this$event","targetRanges","getTargetRanges","staticRangeToRange","withEvent","keydown","_this$delegate8","command","keyboardCommandFromKeyEvent","inputControllerDidReceiveKeyboardCommand","altKey","shiftKey","paste","_event$clipboardData","clipboardData","getData","_this$delegate9","_this$responder6","_this$delegate10","_this$delegate11","_this$responder7","_this$delegate12","pasteEventHasPlainTextOnly","inputControllerWillPaste","inputControllerDidPaste","beforeinput","inputTypes","compositionend","Backspace","_this$responder8","_this$delegate13","_this$responder9","Tab","_this$responder10","_this$responder11","_this$responder12","_this$responder13","deleteByComposition","deleteByCut","deleteByDrag","_this$responder14","deleteByDragRange","deleteCompositionText","deleteContent","deleteContentBackward","deleteContentForward","deleteEntireSoftLine","deleteHardLineBackward","deleteHardLineForward","deleteSoftLineBackward","deleteSoftLineForward","deleteWordBackward","deleteWordForward","formatBackColor","formatBold","formatFontColor","formatFontName","formatIndent","_this$responder15","_this$responder16","formatItalic","formatJustifyCenter","formatJustifyFull","formatJustifyLeft","formatJustifyRight","formatOutdent","_this$responder17","_this$responder18","formatRemove","_this$responder19","_this$responder20","formatSetBlockTextDirection","formatSetInlineTextDirection","formatStrikeThrough","formatSubscript","formatSuperscript","formatUnderline","historyRedo","_this$delegate14","inputControllerWillPerformRedo","historyUndo","_this$delegate15","inputControllerWillPerformUndo","insertCompositionText","insertFromComposition","insertFromDrop","_this$delegate16","inputControllerWillMoveText","_this$responder21","insertFromPaste","dataTransfer","_this$delegate17","_this$responder22","_this$delegate18","DOMParser","parseFromString","dataTransferIsPlainText","_this$delegate19","_this$responder23","_this$delegate20","_this$delegate21","_this$responder24","_this$delegate22","insertFromYank","insertLink","insertOrderedList","insertParagraph","_this$delegate23","_this$responder25","insertReplacementText","replacement","_this$event$dataTrans","insertTranspose","insertUnorderedList","staticRange","clipboard","attributeButtonSelector","actionButtonSelector","toolbarButtonSelector","dialogSelector","activeDialogSelector","dialogButtonSelector","dialogInputSelector","getInputForDialog","getAttributeName","getActionName","ToolbarController","didClickActionButton","didClickAttributeButton","didClickDialogButton","didKeyDownDialogInput","actions","resetDialogInputs","toolbarDidClickButton","actionName","getDialog","toggleDialog","toolbarDidInvokeAction","toolbarDidToggleAttribute","refreshAttributeButtons","dialogElement","keyCode","dialog","hideDialog","updateActions","refreshActionButtons","eachActionButton","disabled","updateAttributes","eachAttributeButton","dialogIsVisible","applyKeyboardCommand","keyString","button","buttonKeys","buttonKeyString","dialogName","showDialog","toolbarWillShowDialog","disabledInput","toolbarDidShowDialog","willValidate","checkValidity","focus","toolbarDidUpdateAttribute","toolbarDidRemoveAttribute","toolbarDidHideDialog","getDialogName","EditorController","editorElement","inputController","compositionController","toolbarController","toolbarElement","editor","notifyEditorElement","handlingInput","updateCurrentActions","pasting","pastedRange","loadingSnapshot","isFocused","requestedLocationRange","compositionRevisionWhenLocationRangeRequested","renderedCompositionRevision","isFocusedInvisibly","requestedRender","recordTypingUndoEntry","recordFormattingUndoEntry","inputControllerWillCutText","inputControllerDidStartDrag","locationRangeBeforeDrag","inputControllerDidReceiveDragOverPoint","inputControllerDidCancelDrag","invokingElement","invokeAction","selectionFrozen","canInvokeAction","actionIsExternal","_this$actions$actionN","_this$actions$actionN2","_this$actions$actionN3","_this$actions$actionN4","getCurrentActions","currentActions","runEditorFilters","filters","updateInputElement","serializer","serializeToContentType","setInputElementValue","message","documentChangedSinceLastRender","notify","getUndoContext","getLocationContext","getTimeContext","floor","Date","getTime","_this$editorElement$o","ownerDocument","RicoToolbarElement","connectedCallback","makeEditable","handleEventOnce","configureContentEditable","setDefaultParagraphSeparator","disableObjectResizing","_document$queryComman","_document","queryCommandSupported","execCommand","_document$queryComman2","_document2","RicoEditorElement","ricoId","labels","label","control","_this$ownerDocument","getElementById","toolbarId","_this$inputElement","inputElement","_this$ownerDocument2","inputId","nextElementSibling","_this$editorControlle","editorController","_this$inputElement2","_this$inputElement3","defaultValue","_this$editor","addAccessibilityRole","texts","contains","ensureAriaLabel","registerResetListener","registerClickListener","autofocus","disconnectedCallback","_this$editorControlle2","unregisterResetListener","unregisterClickListener","resetListener","resetBubbled","clickListener","clickBubbled","Rico","VERSION","version","core","models","controllers","observers","customElements","define"],"mappings":"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"}